// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using examination_system.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace examination_system.Models
{
    public partial interface IExamination_SystemContextProcedures
    {
        Task<int> Delete_CourseAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_DepartmentResult>> Delete_DepartmentAsync(int? DID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_StudentResult>> Delete_StudentAsync(int? SID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_StudentAnswerResult>> Delete_StudentAnswerAsync(int? SID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Delete_TopicAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteEnrollmentResult>> DeleteEnrollmentAsync(int? Course_Id, int? Student_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteExamResult>> DeleteExamAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteInstructorResult>> DeleteInstructorAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_GenerationResult>> Exam_GenerationAsync(int? Ins_ID, int? C_ID, string EName, int? MCQ_num, int? TF_num, int? MCQ_grade, int? TF_grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ExamCorrectionResult>> ExamCorrectionAsync(int? Exam_Id, int? Student_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetInstructorResult>> GetInstructorAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Insert_CourseAsync(string Name, string Description, int? Duration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Insert_DepartmentResult>> Insert_DepartmentAsync(string name, string Des, int? MID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Insert_StudentResult>> Insert_StudentAsync(string fname, string lname, string mail, byte[] pass, string address, int? age, int? deparment_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Insert_StudentAnswerResult>> Insert_StudentAnswerAsync(int? SID, int? EID, int? QID, string Choice, decimal? grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Insert_TopicAsync(string Name, int? Course_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertEnrollmentResult>> InsertEnrollmentAsync(int? Course_Id, int? Student_Id, decimal? Grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertExamResult>> InsertExamAsync(string Name, DateOnly? Date, int? Course_Id, int? Instructor_Id, decimal? MCQ_Grade, decimal? TF_Grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertInstructorResult>> InsertInstructorAsync(string Name, string Email, string Password, string Degree, string Address, decimal? HourRate, decimal? Salary, int? Department_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertStudentAnswerAsync(int? Exam_id, int? Student_id, string answers, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Select_CourseResult>> Select_CourseAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Select_DepartmentResult>> Select_DepartmentAsync(int? DID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Select_StudentResult>> Select_StudentAsync(int? SID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Select_StudentAnswerResult>> Select_StudentAnswerAsync(int? SID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Select_TopicResult>> Select_TopicAsync(int? Course_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectEnrollmentResult>> SelectEnrollmentAsync(int? Course_Id, int? Student_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectExamResult>> SelectExamAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_cChoiceResult>> SP_cChoiceAsync(int? questionId, string choiceText, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_cExamQuestionResult>> SP_cExamQuestionAsync(int? examId, int? questionId, int? questionOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_cQuestionResult>> SP_cQuestionAsync(string questionText, string questionType, string questionAnswer, int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_dChoiceResult>> SP_dChoiceAsync(int? questionId, string choiceText, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_dExamQuestionResult>> SP_dExamQuestionAsync(int? examId, int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_dQuestionResult>> SP_dQuestionAsync(int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_rChoicesResult>> SP_rChoicesAsync(int? questionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_reportDepartmentStudentsResult>> SP_reportDepartmentStudentsAsync(int? departmentId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_ReportingGetCourseTopicsResult>> SP_ReportingGetCourseTopicsAsync(int? Course_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_ReportingGetExamQuestionsResult>> SP_ReportingGetExamQuestionsAsync(int? Exam_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_ReportingGetInstructorCoursesResult>> SP_ReportingGetInstructorCoursesAsync(int? Instructor_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_ReportingGetStudentExamAnswersResult>> SP_ReportingGetStudentExamAnswersAsync(int? Exam_Id, int? Student_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_ReportingGetStudentGradesResult>> SP_ReportingGetStudentGradesAsync(int? Student_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_rExamQuestionsResult>> SP_rExamQuestionsAsync(int? examId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_rQuestionsResult>> SP_rQuestionsAsync(int? courseId, string questionType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_uChoiceResult>> SP_uChoiceAsync(int? questionId, string oldChoiceText, string newChoiceText, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_uExamQuestionResult>> SP_uExamQuestionAsync(int? examID, int? questionId, int? questionOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SP_uQuestionResult>> SP_uQuestionAsync(int? questionId, string questionText, string questionType, string questionAnswer, int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Update_CourseAsync(int? Id, string Name, string Description, int? Duration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Update_DepartmentResult>> Update_DepartmentAsync(int? DID, string name, string Des, int? MID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Update_StudentResult>> Update_StudentAsync(int? SID, string fname, string lname, string mail, byte[] pass, string address, int? age, int? deparment_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Update_StudentAnswerResult>> Update_StudentAnswerAsync(int? SID, int? EID, int? QID, string Choice, decimal? grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Update_TopicAsync(int? Id, string Name, int? Course_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateEnrollmentResult>> UpdateEnrollmentAsync(int? Course_Id, int? Student_Id, decimal? Grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateExamResult>> UpdateExamAsync(int? Id, string Name, DateOnly? Date, int? Course_Id, int? Instructor_Id, decimal? MCQ_Grade, decimal? TF_Grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateInstructorResult>> UpdateInstructorAsync(int? Id, string Name, string Email, string Password, string Degree, string Address, decimal? HourRate, decimal? Salary, int? Department_Id, decimal? Bonus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
