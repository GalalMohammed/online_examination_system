window.repositoryObject = {"parameters":[{"name":"Exam_Id","description":null,"mode":"IN","data_type":"int","custom_fields":{},"linked_terms":[]},{"name":"Student_Id","description":null,"mode":"IN","data_type":"int","custom_fields":{},"linked_terms":[]}],"parameters_custom_fields":[],"dependencies":{"uses":[],"used_by":[]},"object_id":"p56","name":"ExamCorrection","subtype":"PROCEDURE","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"Examination_System_DATA_Dictionary","id":"d2"}},{"field":"Schema","value":"dbo"},{"field":"Name","value":"ExamCorrection"},{"field":"Type","value":"Procedure"}],"script":"CREATE   PROCEDURE ExamCorrection\r\n    @Exam_Id INT,\r\n    @Student_Id INT\r\nAS\r\nBEGIN\r\n    DECLARE @Course_Id INT;\r\n    DECLARE @MCQ_Grade DECIMAL(5,2);\r\n    DECLARE @TF_Grade DECIMAL(5,2);\r\n    DECLARE @Total_MCQ INT;\r\n    DECLARE @Total_TF INT;\r\n    DECLARE @Correct_MCQ INT;\r\n    DECLARE @Correct_TF INT;\r\n    DECLARE @Total_Exam_Marks DECIMAL(18,2);\r\n    DECLARE @Student_Score DECIMAL(18,2);\r\n    DECLARE @Percentage DECIMAL(18,2);\r\n\r\n    BEGIN TRY\r\n        BEGIN TRANSACTION;\r\n\r\n        -- Get Exam Details\r\n        SELECT @Course_Id = Course_Id,\r\n               @MCQ_Grade = MCQ_Grade,\r\n               @TF_Grade = TF_Grade\r\n        FROM Exam\r\n        WHERE Id = @Exam_Id;\r\n\r\n        -- Validate if Exam exists\r\n        IF @Course_Id IS NULL\r\n        BEGIN\r\n            select 'Exam not found!';\r\n            ROLLBACK;\r\n            RETURN;\r\n        END\r\n\r\n\t\tIF not exists(select * from StudentAnswer where Student_Id =@Student_Id)\r\n        BEGIN\r\n            select 'the stundent did not slove exam yet !';\r\n            ROLLBACK;\r\n            RETURN;\r\n        END\r\n\r\n        -- Get total number of MCQ and TF questions in the exam\r\n\r\n\t\tSELECT  @Total_TF=COUNT(*) FROM ExamQuestion EQ \r\n\t\tinner join  Question Q\r\n\t\ton EQ .Question_Id = Q.Id and Type ='TF' and EQ.Exam_Id = @Exam_Id\r\n\r\n\t\tSELECT @Total_MCQ = COUNT(*) FROM ExamQuestion EQ \r\n\t\tinner join  Question Q\r\n\t\ton EQ .Question_Id = Q.Id and Type ='MCQ'and EQ.Exam_Id = @Exam_Id\r\n\r\n\r\n\t\t\r\n\r\n\t\tupdate  SA\r\n\t\t\t\tset Grade = case when \r\n\t\t\t\t\t\t\t\t\tQ.type ='MCQ' and Q.Answer =SA.Choice then @MCQ_Grade\r\n\t\t\t\t\t\t\t\twhen\r\n\t\t\t\t\t\t\t\t\tQ.type ='TF' and Q.Answer =SA.Choice then @TF_Grade\r\n\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\tfrom StudentAnswer SA\r\n\t\t\t\t\t inner join ExamQuestion EQ\r\n\t\t\t\t\t on  SA.Question_Id= EQ.Question_Id\r\n\t\t\t\t\t inner join Question Q\r\n\t\t\t\t\t on Q.Id =EQ.Question_Id\r\n\t\t\t\t\t WHERE SA.Student_Id =@Student_Id AND SA.Exam_Id =@Exam_Id\r\n\r\n\r\n        -- Get number of correct answers by the student\r\n\r\n        SELECT @Correct_MCQ = COUNT(*)  \r\n\t\tfrom StudentAnswer SA\r\n\t\t\t\t\t inner join ExamQuestion EQ\r\n\t\t\t\t\t on  SA.Question_Id= EQ.Question_Id\r\n\t\t\t\t\t inner join Question Q\r\n\t\t\t\t\t on Q.Id =EQ.Question_Id\r\n\t\t\t\t\t WHERE SA.Student_Id =@Student_Id \r\n\t\t\t\t\t\t\tAND SA.Exam_Id =@Exam_Id  \r\n\t\t\t\t\t\t\tand Type = 'MCQ' \r\n\t\t\t\t\t\t\tand SA.Grade >0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\r\n\t\tSELECT @Correct_TF = COUNT(*)  \r\n\t\tfrom StudentAnswer SA\r\n\t\t\t\t\t inner join ExamQuestion EQ\r\n\t\t\t\t\t on  SA.Question_Id= EQ.Question_Id\r\n\t\t\t\t\t inner join Question Q\r\n\t\t\t\t\t on Q.Id =EQ.Question_Id\r\n\t\t\t\t\t WHERE SA.Student_Id =@Student_Id \r\n\t\t\t\t\t\t\tAND SA.Exam_Id =@Exam_Id  \r\n\t\t\t\t\t\t\tand Type = 'TF' \r\n\t\t\t\t\t\t\tand SA.Grade >0\r\n\r\n        -- Calculate Total Possible Score\r\n        SET @Total_Exam_Marks = (@Total_MCQ * @MCQ_Grade) + (@Total_TF * @TF_Grade);\r\n\r\n        -- Calculate Student's Score\r\n        SET @Student_Score = (@Correct_MCQ * @MCQ_Grade) + (@Correct_TF * @TF_Grade);\r\n\r\n        -- Avoid division by zero\r\n        IF @Total_Exam_Marks = 0\r\n        BEGIN\r\n            select 'Error: Exam has no questions!';\r\n            ROLLBACK;\r\n            RETURN;\r\n        END\r\n\r\n        -- Calculate Percentage\r\n        SET @Percentage = (@Student_Score / @Total_Exam_Marks) * 100;\r\n\r\n        -- Update Enrollment Table with the student's percentage\r\n        UPDATE Enrollment\r\n        SET Grade = @Percentage\r\n        WHERE Course_Id = @Course_Id AND Student_Id = @Student_Id;\r\n\r\n        -- Check if Enrollment record exists before updating\r\n        IF @@ROWCOUNT = 0\r\n        BEGIN\r\n            select 'Student is not enrolled in the course!';\r\n            ROLLBACK;\r\n            RETURN;\r\n        END\r\n\r\n        COMMIT;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK;\r\n        select 'ExamCorrection ERROR => ' + ERROR_MESSAGE();\r\n    END CATCH\r\nEND;","imported_at":"2025-02-01 01:13"};